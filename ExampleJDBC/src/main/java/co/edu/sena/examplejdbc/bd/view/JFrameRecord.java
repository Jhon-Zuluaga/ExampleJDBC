/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.edu.sena.examplejdbc.bd.view;

import co.edu.sena.examplejdbc.bd.Utils.MessageUtils;
import co.edu.sena.examplejdbc.controllers.EmployeeController;
import co.edu.sena.examplejdbc.controllers.IEmployeeController;
import co.edu.sena.examplejdbc.controllers.IKeyController;
import co.edu.sena.examplejdbc.controllers.IRecordController;
import co.edu.sena.examplejdbc.controllers.KeyController;
import co.edu.sena.examplejdbc.controllers.RecordController;
import co.edu.sena.examplejdbc.model.Employee;
import co.edu.sena.examplejdbc.model.Key;
import co.edu.sena.examplejdbc.model.Record;
import java.time.LocalDate;
import java.util.List;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aprendiz
 */
public class JFrameRecord extends javax.swing.JFrame {

    private IRecordController recordController = new RecordController();
    private IEmployeeController employeeController = new EmployeeController();
    private IKeyController keyController = new KeyController();

    /**
     * Creates new form JFrameRecord
     */
    public JFrameRecord() {
        initComponents();
        fillCombos();
        fillTable();
    }

    public void fillCombos() {
        try {
            List<Employee> employees = employeeController.findAll();
            DefaultComboBoxModel modelEmployee = new DefaultComboBoxModel();
            jComboBoxIDEmployee.setModel(modelEmployee);
            modelEmployee.addAll(employees);

            List<Key> allIdKeys = keyController.findAll();
            DefaultComboBoxModel modelKeys = new DefaultComboBoxModel();
            jComboBoxIDkey.setModel(modelKeys);
            modelKeys.addAll(allIdKeys);
            jComboBoxIDkey.setSelectedIndex(0);
            jComboBoxIDEmployee.setSelectedIndex(0);

        } catch (Exception e) {
            MessageUtils.ShowErrorMessage(e.getMessage());
        }
    }

    public void fillTable() {
        try {
            DefaultTableModel model = new DefaultTableModel();
            jTableRecord.setModel(model);
            model.addColumn("ID");
            model.addColumn("Fecha");
            model.addColumn("Hora inicio");
            model.addColumn("Hora finalizacion");
            model.addColumn("Funcionario");
            model.addColumn("LLave");
            model.addColumn("Estado");

            String[] rows = new String[7];
            List<Record> results = recordController.findAll();
            for (Record result : results) {
                rows[0] = String.valueOf(result.getId());
                rows[1] = result.getDate_record();
                rows[2] = result.getStart_time();
                rows[3] = result.getEnd_time();
                rows[4] = result.getEmployeeId().getFullname();
                rows[5] = result.getKey().getName();
                rows[6] = result.getStatus();
                model.addRow(rows);
            }
            jButtonInsert.setEnabled(true);
            jButtonUpdate.setEnabled(false);
            jButtonDelete.setEnabled(false);
        } catch (Exception e) {
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelTittle = new javax.swing.JLabel();
        jLabelId = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jLabelDateRecord = new javax.swing.JLabel();
        jLabelStartTime = new javax.swing.JLabel();
        jLabelEndTime = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        timePickerStart_time = new com.github.lgooddatepicker.components.TimePicker();
        timePickerEnd_time = new com.github.lgooddatepicker.components.TimePicker();
        jComboBoxStatusStatus = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRecord = new javax.swing.JTable();
        jButtonInsert = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jComboBoxIDEmployee = new javax.swing.JComboBox<>();
        jComboBoxIDkey = new javax.swing.JComboBox<>();
        datePickerdate_record = new com.github.lgooddatepicker.components.DatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 0, 204));

        jLabelTittle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTittle.setText("REGISTRO");
        jLabelTittle.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabelTittle.setForeground(new java.awt.Color(255, 255, 255));

        jLabelId.setText("ID:");
        jLabelId.setBackground(new java.awt.Color(255, 255, 255));
        jLabelId.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabelId.setForeground(new java.awt.Color(255, 255, 255));

        jLabelDateRecord.setText("FECHA DE REGISTRO:");
        jLabelDateRecord.setBackground(new java.awt.Color(255, 255, 255));
        jLabelDateRecord.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabelDateRecord.setForeground(new java.awt.Color(255, 255, 255));

        jLabelStartTime.setText("HORA INICIAL:");
        jLabelStartTime.setBackground(new java.awt.Color(255, 255, 255));
        jLabelStartTime.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabelStartTime.setForeground(new java.awt.Color(255, 255, 255));

        jLabelEndTime.setText("HORA FINALIZACIÃ“N:");
        jLabelEndTime.setBackground(new java.awt.Color(255, 255, 255));
        jLabelEndTime.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabelEndTime.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("FUNCIONARIO:");
        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("LLAVE:");
        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("ESTADO:");
        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));

        jComboBoxStatusStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PENDIENTE", "ENTREGADO", "CANCELADO" }));

        jTableRecord.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableRecord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableRecordMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableRecord);

        jButtonInsert.setText("Insert");
        jButtonInsert.setBackground(new java.awt.Color(153, 255, 102));
        jButtonInsert.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jButtonInsert.setForeground(new java.awt.Color(0, 0, 0));
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.setBackground(new java.awt.Color(51, 255, 255));
        jButtonUpdate.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jButtonUpdate.setForeground(new java.awt.Color(0, 0, 0));
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonClear.setText("Clear");
        jButtonClear.setBackground(new java.awt.Color(204, 204, 204));
        jButtonClear.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jButtonClear.setForeground(new java.awt.Color(0, 0, 0));
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.setBackground(new java.awt.Color(255, 51, 51));
        jButtonDelete.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(0, 0, 0));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jComboBoxIDEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxIDEmployeeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonInsert)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUpdate)
                        .addGap(72, 72, 72)
                        .addComponent(jButtonDelete))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabelDateRecord, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jComboBoxStatusStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBoxIDEmployee, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBoxIDkey, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(datePickerdate_record, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabelStartTime)
                            .addGap(14, 14, 14))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabelId, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelEndTime))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(timePickerStart_time, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                .addComponent(jTextFieldId)
                                .addComponent(timePickerEnd_time, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButtonClear)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jLabelTittle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabelTittle)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelId)
                            .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelStartTime)
                            .addComponent(timePickerStart_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelEndTime)
                            .addComponent(timePickerEnd_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDateRecord)
                            .addComponent(datePickerdate_record, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jLabel1)
                                .addGap(25, 25, 25))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxIDEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBoxStatusStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBoxIDkey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonInsert)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonClear))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
        try {
            Record record = new Record();
            record.setDate_record(datePickerdate_record.getDate().toString());
            record.setStart_time(timePickerStart_time.getTime().toString());
            //record.setEnd_time(timePickerEnd_time.getTime() != null ? timePickerEnd_time.getTime().toString() : null);
            record.setEnd_time(null);

            //FK 
            Employee employee = (Employee) jComboBoxIDEmployee.getSelectedItem();
            record.setEmployeeId(employee);

            Key key = (Key) jComboBoxIDkey.getSelectedItem();
            record.setKey(key);
            record.setStatus(jComboBoxStatusStatus.getSelectedItem().toString());
            recordController.insert(record);
            fillTable();
            clear();

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        clear();
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        try {
            Record record = new Record();
            record.setId(Integer.parseInt(jTextFieldId.getText()));
            record.setDate_record(datePickerdate_record.getDate().toString());
            record.setStart_time(timePickerStart_time.getTime().toString());
            record.setEnd_time(timePickerEnd_time.getTime() != null ? timePickerEnd_time.getTime().toString() : null);

            //FK 
            Employee employee = (Employee) jComboBoxIDEmployee.getSelectedItem();
            record.setEmployeeId(employee);

            Key key = (Key) jComboBoxIDkey.getSelectedItem();
            record.setKey(key);
            record.setStatus(jComboBoxStatusStatus.getSelectedItem().toString());
            recordController.update(record);
            fillTable();
            clear();

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jComboBoxIDEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxIDEmployeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxIDEmployeeActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
      try {
            int option = JOptionPane.showConfirmDialog(rootPane, "Estas seguro de eliminar el empleado?",
                    "CONFIRMAR", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                recordController.delete(Integer.parseInt(jTextFieldId.getText()));
                MessageUtils.ShowInfoMessage("Registro eliminado correctamente...");
                fillTable();
            }
            clear();
            
        } catch (Exception e) {
            MessageUtils.ShowErrorMessage("HUBO UN ERROR al eliminar..." + e.getMessage());
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTableRecordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRecordMouseClicked
        int rowSelected = jTableRecord.getSelectedRow();
        if (rowSelected != -1) {
            int idSelected = Integer.parseInt(jTableRecord.getValueAt(rowSelected, 0).toString());
            try {
                Record record = recordController.findById(idSelected);
                jTextFieldId.setText(String.valueOf(idSelected));
                datePickerdate_record.setDate(LocalDate.parse(record.getDate_record()));
                timePickerStart_time.setText(record.getStart_time());
                timePickerEnd_time.setText(record.getEnd_time());
                jComboBoxIDEmployee.getModel().setSelectedItem(record.getEmployeeId());
                jComboBoxIDkey.getModel().setSelectedItem(record.getKey().toString());
                jComboBoxStatusStatus.setSelectedItem(record.getStatus());
            } catch (Exception e) {
                MessageUtils.ShowErrorMessage("ERROR al usar el evento de click"
                        + e.getMessage());
            }
        }
        jButtonInsert.setEnabled(false);
        jButtonDelete.setEnabled(true);
        jButtonUpdate.setEnabled(true);
    }//GEN-LAST:event_jTableRecordMouseClicked
    public void clear() {
        jTextFieldId.setText("");
        timePickerEnd_time.setText("");
        timePickerStart_time.setText("");
        jTableRecord.clearSelection();
        jComboBoxIDEmployee.setSelectedIndex(0);
        jComboBoxIDkey.setSelectedIndex(0);
        jComboBoxStatusStatus.setSelectedIndex(0);
        jButtonInsert.setEnabled(true);
        jButtonDelete.setEnabled(false);
        jButtonUpdate.setEnabled(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DatePicker datePickerdate_record;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBoxIDEmployee;
    private javax.swing.JComboBox<String> jComboBoxIDkey;
    private javax.swing.JComboBox<String> jComboBoxStatusStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelDateRecord;
    private javax.swing.JLabel jLabelEndTime;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelStartTime;
    private javax.swing.JLabel jLabelTittle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRecord;
    private javax.swing.JTextField jTextFieldId;
    private com.github.lgooddatepicker.components.TimePicker timePickerEnd_time;
    private com.github.lgooddatepicker.components.TimePicker timePickerStart_time;
    // End of variables declaration//GEN-END:variables
}
